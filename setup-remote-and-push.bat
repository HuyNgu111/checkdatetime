@echo off
chcp 65001 > nul
echo ========================================
echo    SETUP REMOTE V√Ä PUSH
echo ========================================
echo.

echo Ki·ªÉm tra remote repository...
git remote -v

echo.
set has_remote=0
for /f %%i in ('git remote') do set has_remote=1

if %has_remote%==0 (
    echo ‚ùå CH∆ØA C√ì REMOTE REPOSITORY!
    echo.
    echo ========================================
    echo    H∆Ø·ªöNG D·∫™N TH√äM REMOTE
    echo ========================================
    echo.
    echo B∆∞·ªõc 1: T·∫°o repository tr√™n GitHub
    echo    - V√†o: https://github.com/new
    echo    - T√™n repository: checkdatetime (ho·∫∑c t√™n kh√°c)
    echo    - Public ho·∫∑c Private (t√πy ch·ªçn)
    echo    - KH√îNG tick "Initialize with README"
    echo    - Click "Create repository"
    echo.
    echo B∆∞·ªõc 2: Copy URL repository
    echo    Sau khi t·∫°o, GitHub s·∫Ω hi·ªán URL d·∫°ng:
    echo    https://github.com/username/checkdatetime.git
    echo.
    echo ========================================
    echo.
    set /p repo_url="Paste Repository URL v√†o ƒë√¢y: "
    
    echo.
    echo ƒêang th√™m remote repository...
    git remote add origin !repo_url!
    
    if %ERRORLEVEL% EQU 0 (
        echo ‚úÖ Remote added successfully!
        echo.
        git remote -v
    ) else (
        echo ‚ùå Failed to add remote!
        pause
        exit /b 1
    )
) else (
    echo ‚úÖ Remote repository ƒë√£ t·ªìn t·∫°i:
    git remote -v
)

echo.
echo ========================================
echo    CHU·∫®N B·ªä PUSH
echo ========================================

echo.
echo [1/4] Ki·ªÉm tra thay ƒë·ªïi...
git status --short

echo.
echo [2/4] Th√™m t·∫•t c·∫£ files...
git add .

echo.
echo [3/4] T·∫°o commit (n·∫øu c√≥ thay ƒë·ªïi)...
git diff-index --quiet HEAD
if %ERRORLEVEL% NEQ 0 (
    git commit -m "Update: Add helper scripts and documentation for GitHub setup"
    echo ‚úÖ Commit created
) else (
    echo ‚Ñπ No changes to commit
)

echo.
echo [4/4] Push to GitHub...
echo.
echo ========================================
echo    ‚ö†Ô∏è QUAN TR·ªåNG - X√ÅC TH·ª∞C
echo ========================================
echo.
echo Khi Git h·ªèi Username v√† Password:
echo.
echo   Username: [Nh·∫≠p GitHub username c·ªßa b·∫°n]
echo   Password: [PASTE Personal Access Token]
echo.
echo ‚ö†Ô∏è L∆ØU √ù:
echo   - Password KH√îNG PH·∫¢I l√† password GitHub
echo   - Ph·∫£i d√πng Personal Access Token
echo   - N·∫øu ch∆∞a c√≥ token, xem file: TOKEN_GUIDE.md
echo.
echo T·∫°o token t·∫°i: https://github.com/settings/tokens
echo.
echo ========================================
echo.
pause
echo.
echo ƒêang push...
echo.

git push -u origin main

if %ERRORLEVEL% EQU 0 (
    echo.
    echo ========================================
    echo ‚úÖ‚úÖ‚úÖ PUSH TH√ÄNH C√îNG! ‚úÖ‚úÖ‚úÖ
    echo ========================================
    echo.
    echo Code ƒë√£ ƒë∆∞·ª£c push l√™n GitHub!
    echo.
    echo üìã B∆∞·ªõc ti·∫øp theo:
    echo.
    echo 1. M·ªü repository tr√™n GitHub
    for /f "tokens=2" %%i in ('git remote get-url origin') do echo    %%i
    echo.
    echo 2. V√†o tab "Actions" ƒë·ªÉ xem CI/CD workflow ch·∫°y
    echo    - Workflow s·∫Ω t·ª± ƒë·ªông compile code
    echo    - Ch·∫°y 15 test cases
    echo    - T·∫°o coverage report
    echo.
    echo 3. Download coverage report t·ª´ "Artifacts"
    echo    - Ch·ªù workflow ch·∫°y xong (kho·∫£ng 1-2 ph√∫t)
    echo    - V√†o workflow run
    echo    - Tab "Artifacts" ‚Üí Download "coverage-report"
    echo.
    echo ========================================
    echo.
    echo üéâ HO√ÄN TH√ÄNH! Repository c·ªßa b·∫°n ƒë√£ s·∫µn s√†ng!
    echo ========================================
) else (
    echo.
    echo ========================================
    echo ‚ùå PUSH TH·∫§T B·∫†I
    echo ========================================
    echo.
    echo C√°c nguy√™n nh√¢n c√≥ th·ªÉ:
    echo.
    echo 1. ‚ùå AUTHENTICATION FAILED (Ph·ªï bi·∫øn nh·∫•t)
    echo    Nguy√™n nh√¢n:
    echo    - D√πng password thay v√¨ token
    echo    - Token h·∫øt h·∫°n
    echo    - Token thi·∫øu quy·ªÅn
    echo.
    echo    Gi·∫£i ph√°p:
    echo    a. T·∫°o token m·ªõi:
    echo       - V√†o: https://github.com/settings/tokens
    echo       - Generate new token (classic)
    echo       - Tick: ‚úÖ repo (full control)
    echo       - Copy token
    echo.
    echo    b. Ch·∫°y l·∫°i script n√†y
    echo       .\setup-remote-and-push.bat
    echo.
    echo    c. Paste token khi h·ªèi password
    echo.
    echo 2. ‚ùå REPOSITORY KH√îNG T·ªíN T·∫†I
    echo    Gi·∫£i ph√°p:
    echo    - T·∫°o repository tr√™n GitHub
    echo    - V√†o: https://github.com/new
    echo.
    echo 3. ‚ùå REMOTE URL SAI
    echo    Ki·ªÉm tra: git remote -v
    echo    S·ª≠a: git remote set-url origin [URL_ƒê√öNG]
    echo.
    echo 4. ‚ùå NETWORK/FIREWALL ISSUES
    echo    - Ki·ªÉm tra k·∫øt n·ªëi internet
    echo    - Ki·ªÉm tra firewall/antivirus
    echo.
    echo ========================================
    echo.
    echo üîß Debug commands:
    echo    git remote -v          (xem remote URL)
    echo    git status             (xem tr·∫°ng th√°i)
    echo    git log --oneline -3   (xem commits)
    echo.
    echo üí° Th·ª≠ push v·ªõi verbose output:
    echo    git push -u origin main --verbose
    echo.
    echo ========================================
)

echo.
pause
